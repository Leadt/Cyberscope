{% extends 'base.html.twig' %}

{% block title %}Fil d'actualit√©
{% endblock %}

{% block body %}
	<style>
		.example-wrapper {
			margin: 1em auto;
			max-width: 800px;
			width: 95%;
			font: 18px / 1.5 sans-serif;
		}
		.example-wrapper code {
			background: #F5F5F5;
			padding: 2px 6px;
		}
		.card {
			padding: 20px;
			margin: 3%;
		}
		.card-pseudo {
			color: grey;
		}
		.react {
			--r: 40px;
			display: inline-grid;
			cursor: pointer;
			width: var(--r);
			height: var(--r);
			border-radius: 50%;
			margin: calc(var(--r) / 3);
			line-height: var(--r);
			text-align: center;
			transform: rotate(0);
		}

		.react i:before {
			content: attr(data-icon);
			grid-area: 1 / 1;
			font-style: normal;
			font-size: calc(0.6*var(--r));
		}

		.react i {
			filter:grayscale(100%);
			transform: scale(1);
			grid-area: 1 / 1;
			display: inherit;
			transition: transform 0.6s cubic-bezier(0.5,-12,1,-12);
		}
		.react:hover {
			transform: rotate(0.1deg);
			transition: transform 0.25s cubic-bezier(0.5,400,0.5,-400);
		}
		.react:before {
			content: "";
			grid-area: 1 / 1;
			border-radius: 50%;
			border: solid orange calc(var(--r) / 2);
			transform: scale(0);
		}
		.react:after,
		.react i:after {
			content: "";
			grid-area: 1 / 1;
			margin: calc(var(--r)/-2);
			--c1: radial-gradient(red 50%,#0000 60%);
			--c2: radial-gradient(orange 50%,#0000 60%);
			background: var(--c1), var(--c1), var(--c1), var(--c1), var(--c2), var(--c2), var(--c2), var(--c2);
			background-size: calc(var(--r) / 6) calc(var(--r)/6);
			background-position: calc(50% - var(--r) / 2) calc(50% - var(--r)/2), calc(50% + var(--r) / 2) calc(50% - var(--r)/2), calc(50% - var(--r) / 2) calc(50% + var(--r)/2), calc(50% + var(--r) / 2) calc(50% + var(--r)/2), calc(50% + 0px) calc(50% + var(--r)*0.707), calc(50% + var(--r) * 0.707) calc(50% + 0px), calc(50% - var(--r) * 0.707) calc(50% + 0px), calc(50% + 0px) calc(50% - var(--r)*0.707);
			background-repeat: no-repeat;
			transform: scale(0);
		}
		.react i:after {
			background-size: calc(var(--r) / 8) calc(var(--r)/8);
			transform: rotate(60deg) scale(0);
		}

		input:checked + .react i {
			filter:grayscale(0);
			transform: scale(0.95);
			transition: filter 0.5s 0.5s, transform 1s cubic-bezier(0,26.67,0.5,26.67);
		}
		input:checked + .react:before {
			border-width: 0;
			transform: scale(1);
			transition: transform 0.5s, border-width 0.5s 0.5s;
		}
		input:checked + .react:after,
		input:checked + .react i:after {
			transform: scale(1);
			opacity: 0;
			background-size: 0 0;
			transition: transform 0.5s 0.5s, opacity 0.4s 0.9s, background-size 0.5s 0.9s;
		}
		input:checked + .react i:after {
			transform: rotate(55deg) scale(1);
		}

		input {
			position: absolute;
			visibility: hidden;
			clip-path: inset(50%)
		}
		.btn-block {
			margin-top: 10px;
			text-align: center;
		}
		.button-add {
			width: 95%;
			padding: 10px 0;
			margin: 10px auto;
			border-radius: 5px;
			border: none;
			background: #dcb124;
			font-size: 14px;
			font-weight: 600;
			color: #fff;
		}
		button:hover {
			background: #b18f1d;
		}
		.deconect {
			color: white;
			height: 530px;
			display: flex;
			align-items: center;
			justify-content: center;
			font: 20px / 1.5 sans-serif;
		}
		.card-img {
			height: 300px;
			width: auto;
		}
	</style>


	{% if app.user %}
		{# Disponible que si l'utilisateur est connect√© #}
		<div class="container">

			<div class="btn-block">
				<button class="button-add" onclick="window.location.href = '{{ path('app_formPost') }}'">Nouveau post</button>
			</div>

			{# Affichage des post que l'admin a valid√© #}
			{% for post in liste_post %}
				{% if post.getAffichage()==1 %}
					<div class="card">
						<div class="card-body">
							<p>
								<h5 class="card-title">
									<span>{{ post.getTitrePost() }}</span>
								</h5>

							</p>
							<span
								class="card-pseudo">
								{# Pseudo cliquable pour acceder √† tous les posts de cet utilisateur #}
								<a href="{{ path('app_utilisateurPost', { 'id': post.getUser().getId() }) }}">{{ post.getUser().getPseudoUser() }}</a>
							</span>
						</p>

						{% if post.getImagePost() %}
							<img src="images/{{ post.getImagePost() }}" class="card-img" alt="{{ post.getImagePost() }}">
						{% endif %}


						<p>
							<span>{{ post.getDescriptionPost() }}</span>
						</p>
						<br>
						<input type="checkbox" id="r2">
				<label for="r2" class="react">
					<i data-icon="‚ù§Ô∏è"></i>
				</label>
					<input type="checkbox" id="r5">
					<label for="r5" class="react">
						<i data-icon="üíØ"></i>
					</label>

				<input type="checkbox" id="r3">
				<label for="r3" class="react">
					<i data-icon="üêô"></i>
				</label>


				<input type="checkbox" id="r4">
				<label for="r4" class="react">
					<i data-icon="üëç"></i>
				</label>
				<br>
{# 
						{% for reaction in post.getReactions() %}
						dans le for
							{% if reaction.getIdUser() == app.user %}
							dans le if
							{% if reaction.isCoeur()==0 %}
							dans le if
					<div class="button-block">
						<button class="button-valider" onclick="window.location.href = '{{ path('post_reaction', {'id': post.id}) }}'">
							reaction ok</button>
					</div>
				{% else %}
				dans le else
					<div class="button-block">
						<button class="button-masquer" onclick="window.location.href = '{{ path('post_afficher', {'id': post.id}) }}'">
							Masquer le post</button>
					</div>
				{% endif %}
				{% endif %}
				{% endfor %} #}
								{# <input type="checkbox" class="checkbox-reaction" data-post-id="{{ post.id }}" data-user-id="{{ app.user.id }}" data-reaction-type="cent" {% if reaction.isCent() %} checked {% endif %}>
								<label class="react">
									cent
								</label>
								<input type="checkbox" name="cent" id="cent_checkbox" value="1" {% if reaction.isCent() %} checked {% endif %}>
								<label class="react">
									<i data-icon="üíØ"></i>
								</label>
								<input type="checkbox" name="coeur" id="coeur_checkbox" value="1" {% if reaction.isCoeur() %} checked {% endif %}>
								<label class="react">
									<i data-icon="‚ù§Ô∏è"></i>
								</label>
								<input type="checkbox" name="poulpe" id="poulpe_checkbox" value="1" {% if reaction.isPoulpe() %} checked {% endif %}>
								<label class="react">
									<i data-icon="üêô"></i>
								</label>
								<input type="checkbox" name="pouce" id="pouce_checkbox" value="1" {% if reaction.isPouce() %} checked {% endif %}>
								<label class="react">
									<i data-icon="üëç"></i>
								</label>

							{% endif %}
						{% endfor %}
						<script>
							src = "https://code.jquery.com/jquery-3.6.0.min.js"
dd('je suis dans le script');
var_dump('je suis dans le script');
$('.checkbox-reaction').click(function () {
var postId = $(this).data('post-id');
var userId = $(this).data('user-id');
var reactionType = $(this).data('reaction-type');
var isChecked = $(this).is(':checked');

$.ajax({
type: 'POST',
url: '/update-reaction',
data: {
'postId': postId,
'userId': userId,
'reactionType': reactionType,
'isChecked': isChecked
},
success: function (data) {
console.log('R√©action mise √† jour avec succ√®s');
},
error: function (jqXHR, textStatus, errorThrown) {
console.log('Erreur lors de la mise √† jour de la r√©action');
}
});
});
						</script> #}

					</div>

				</div>
			{% endif %}
		{% endfor %}

	{% else %}
		{# Si l'utilisateur n'est pas connect√©, on lui demande de le faire #}
		<div class="container deconect">
			<p>
				<a href="{{ path('app_login') }}">
					CLIQUEZ ICI
				</a>
				pour acc√©der aux contenus</p>
		</div>
	{% endif %}
{% endblock %}
